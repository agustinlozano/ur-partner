service: upload-images-lambda
frameworkVersion: "3"

plugins:
  - serverless-esbuild

package:
  exclude:
    - node_modules/**
    - .env*
    - .build/**
    - .serverless/**
    - README.md
    - tsconfig.json
    - "*.md"
    - "*.ts"
    - lib/**/*.ts
  include:
    - handler.js
    - lib/**/*.js
    - node_modules/aws-sdk/**
    - node_modules/ioredis/**

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  stage: dev
  timeout: 30
  memorySize: 512
  environment:
    DYNAMODB_TABLE_NAME: ur-partner-rooms
    S3_BUCKET_NAME: ur-partner-images
    REDIS_HOST: ur-partner-cache-iqc8dm.serverless.use2.cache.amazonaws.com
    REDIS_PORT: 6379
    REDIS_TLS: "true"

  # ✅ IAM Permissions
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::ur-partner-images/*"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:UpdateItem
            - dynamodb:GetItem
          Resource: "arn:aws:dynamodb:us-east-2:*:table/ur-partner-rooms"
        - Effect: Allow
          Action:
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
          Resource: "*"

  # ✅ ElastiCache VPC Configuration
  vpc:
    securityGroupIds:
      - sg-005478a6cc0d8a8b8
    subnetIds:
      - subnet-0a253be3cf45b60cd
      - subnet-018e5eeea059ec6bd

functions:
  uploadImages:
    handler: handler.uploadImages
    events:
      - http:
          path: upload
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    exclude:
      - aws-sdk
    target: "node20"
    define:
      "require.resolve": undefined
    platform: "node"
    concurrency: 10
